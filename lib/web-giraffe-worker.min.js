function nope(){}function CommandDispatcher(){this.handlers={},this.defaultHandler=function(a){console.warn("Unhandled command ",a)}}function Base36Namer(){this.id=0}function promise_protocol_repliesTo(a,b){function c(a,c){if(void 0===a.replyTo)return void console.warn("replyTo required on message ",a);try{if(c){if(a.transfered)throw new Error("Transfer list conflict");a.transfered=c.ports}var e,f=a.progressName;e=f?function(a){d.send({command:f,details:a})}.bind(this):nope;var g=Promise.resolve(b(a,e));g.then(function(b){var c=b.transfer?b.transfer:[];delete b.transfer,d.send({command:a.replyTo,success:!0,result:b},c)},function(b){d.send({command:a.replyTo,success:!1,error:b.toString()})})}catch(h){d.send({command:a.replyTo,success:!1,error:h.toString()})}}if(!b)throw new Error("handler required");var d=this;this.register(a,c)}function promies_protocol_withProgressAndReplyTo(a){var b=this.namer.next();a.progressName=b;var c=this;this.register(b,function(a){var b=a.details;d.onProgress(b)});var d=this.withReplyTo(a);return d.then(function(){c.unregister(b)},function(){c.unregister()}),d.onProgress=nope,d}function promise_protocol_withReplyTo(a){if(a.replyTo)throw new Error("replyTo not allowed (used by the protocol)");var b=this.namer.next(),c=this.promiseMessage(b).then(function(b){if(b.success){var c=b.result;return b.transfered&&b.transfered.length>0&&(c.transfered=b.transfered),c}throw new Error(b.error?b.error:"Command failed to properly respond for "+a.command)});a.replyTo=b;var d=a.transfer?a.transfer:[];return delete a.transfer,this.send(a,d),c}function port_linkage_send(a,b){this.port.postMessage(a,b)}function giraffe_worker_agent(a,b){function c(b,c,d){var e=new CommandDispatcher;e.defaultHandler=function(a){console.warn("[worker:",b,"] Unknown comamnd: ",a)},e.usesPromises(new Base36Namer),e.repliesTo(workProtocol.initialize,function(c){return Promise.resolve(a.init(c.config)).then(function(){return{id:b}})}),e.repliesTo(workProtocol.operation,function(b){return Promise.resolve(a.perform_work_on(b.on))}),e.linkPort(c,d)}a=a||self,a.init=a.init||nope,a.perform_work_on=a.perform_work_on||nope,b=b||self;var d=new CommandDispatcher;d.defaultHandler=function(a){console.error("[work-agent] unhandled command ",a)},d.usesPromises(new Base36Namer),d.register("giraffe:browser-worker-init",function(a,b){id=a.id,port=b.ports[0],c(id,port,!1)}),d.register("giraffe:web-worker-init",function(a){c(a.id,self,!0)}),b.addEventListener("message",function(a){var b=a.data;d.dispatch(b,a)})}CommandDispatcher.prototype.register=function(a,b){this.handlers[a]=b},CommandDispatcher.prototype.unregister=function(a){delete this.handlers[a]},CommandDispatcher.prototype.dispatch=function(a,b){var c=a.command,d=this.handlers[c]||this.defaultHandler;d(a,b)},CommandDispatcher.prototype.once=function(a,b){if(!a)throw new Error("name not defined");if(!b)throw new Error("handler not defined");return this.register(a,function(c,d){this.unregister(a),b(c,d)}.bind(this)),a},CommandDispatcher.prototype.promiseMessage=function(a){if(!a)throw new Error("command name must be defined");var b,c;return this.once(a,function(a,d){if(a.transfered)throw new Error("Transfer list clobbered");d&&d.ports&&d.ports.length>0&&(a.transfered=d.ports),c?c(a):b=a}),new Promise(function(a){b?a(b):c=a})},CommandDispatcher.prototype.linkChannel=function(a){a.addEventListener("message",function(a){this.dispatch(a.data,a)}.bind(this))},Base36Namer.prototype.next=function(){var a=this.id;return this.id++,a.toString(36)},CommandDispatcher.prototype.usesPromises=function(a){a&&(this.namer=a),this.withReplyTo=promise_protocol_withReplyTo,this.withProgressAndReplyTo=promies_protocol_withProgressAndReplyTo,this.repliesTo=promise_protocol_repliesTo},CommandDispatcher.prototype.linkPort=function(a,b){this.port=a,this.send=port_linkage_send,this.linkChannel(a),b||this.port.start()},CommandDispatcher.prototype.reportUnhandled=function(a){this.defaultHandler=function(b){console.warn("[",a,"] Unhandled message: ",b)}};var workProtocol={initialize:"giraffe:work-agent:initialize",initialized:"giraffe:work-agent:initialized",started:"giraffe:work-agent:started",operation:"giraffe:work-agent:operation"};